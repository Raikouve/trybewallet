{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { fetchCurrencies } from '../actions';\nimport getCurrencyInfo from '../services/currencyAPI';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currencies: [],\n      totalExpenses: 0,\n      actualCurrency: 'BRL'\n    };\n  }\n\n  componentDidMount() {// const { fetchCurrencies } = this.props;\n    // fetchCurrencies();\n  }\n\n  render() {\n    const {\n      userEmail\n      /* , walletCurrencies */\n\n    } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const {\n      currencies,\n      totalExpenses,\n      actualCurrency\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, userEmail), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, totalExpenses), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, actualCurrency)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Valor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Descri\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"Moeda\",\n      options: currencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"M\\xE9todo de pagamento\",\n      options: payMethods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"Tag\",\n      options: tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nWallet.propTypes = {\n  fetchCurrencies: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCurrencies: () => dispatch(fetchCurrencies())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","PropTypes","Input","Select","fetchCurrencies","getCurrencyInfo","Wallet","Component","constructor","state","currencies","totalExpenses","actualCurrency","componentDidMount","render","userEmail","props","payMethods","tags","propTypes","func","isRequired","string","walletCurrencies","arrayOf","mapStateToProps","user","email","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { fetchCurrencies } from '../actions';\nimport getCurrencyInfo from '../services/currencyAPI';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currencies: [],\n      totalExpenses: 0,\n      actualCurrency: 'BRL',\n    };\n  }\n\n  componentDidMount() {\n    // const { fetchCurrencies } = this.props;\n    // fetchCurrencies();\n  }\n\n  \n\n  render() {\n    const { userEmail/* , walletCurrencies */ } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const { currencies, totalExpenses, actualCurrency } = this.state;\n    return (\n      <section>\n        <header>\n          <span data-testid=\"email-field\">{ userEmail }</span>\n          <span data-testid=\"total-field\">{ totalExpenses }</span>\n          <span data-testid=\"header-currency-field\">{ actualCurrency }</span>\n        </header>\n        <form>\n          <Input\n            type=\"text\"\n            name=\"Valor\"\n          />\n          <Input\n            type=\"text\"\n            name=\"Descrição\"\n          />\n          <Select\n            name=\"Moeda\"\n            options={ currencies }\n          />\n          <Select\n            name=\"Método de pagamento\"\n            options={ payMethods }\n          />\n          <Select\n            name=\"Tag\"\n            options={ tags }\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nWallet.propTypes = {\n  fetchCurrencies: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrencies: () => dispatch(fetchCurrencies()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}