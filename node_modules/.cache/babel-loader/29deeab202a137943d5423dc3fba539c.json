{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setUserEmail, set } from '../actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailValidation = this.handleEmailValidation.bind(this);\n    this.handlePasswordValidation = this.handlePasswordValidation.bind(this);\n  }\n\n  handleEmailChange({\n    target: {\n      value\n    }\n  }) {\n    const {\n      setUserEmailLogin\n    } = this.props;\n    setUserEmailLogin(value);\n  }\n\n  handlePasswordChange({\n    target: {\n      value\n    }\n  }) {\n    const {\n      setUserPasswordLogin\n    } = this.props;\n    setUserPasswordLogin(value);\n  }\n\n  handleEmailValidation(email) {\n    const regexEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return regexEmail.test(email);\n  }\n\n  handlePasswordValidation(password) {\n    const NUMBER_SIX = 6;\n    return password.length >= NUMBER_SIX;\n  }\n\n  render() {\n    const {\n      userEmail,\n      userPassword\n    } = this.props;\n    const isEmailValid = this.handleEmailValidation(userEmail);\n    const isPasswordValid = this.handlePasswordValidation(userPassword);\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, console.log(userEmail), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      \"data-testid\": \"email-input\",\n      onChange: this.handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Senha\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      \"data-testid\": \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: !isEmailValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nLogin.propTypes = {\n  setUserEmailLogin: PropTypes.func.isRequired,\n  setUserPasswordLogin: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userPassword: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.userReducer.user.email,\n  userPassword: state.userReducer.user.password\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUserEmailLogin: email => dispatch(setUserEmail(email)),\n  setUserPasswordLogin: password => dispatch(setUserPassword(password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","setUserEmail","set","Login","constructor","handleEmailChange","bind","handlePasswordChange","handleEmailValidation","handlePasswordValidation","target","value","setUserEmailLogin","props","setUserPasswordLogin","email","regexEmail","test","password","NUMBER_SIX","length","render","userEmail","userPassword","isEmailValid","isPasswordValid","console","log","propTypes","func","isRequired","string","mapStateToProps","state","userReducer","user","mapDispatchToProps","dispatch","setUserPassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setUserEmail, set } from '../actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailValidation = this.handleEmailValidation.bind(this);\n    this.handlePasswordValidation = this.handlePasswordValidation.bind(this);\n  }\n\n  handleEmailChange({ target: { value } }) {\n    const { setUserEmailLogin } = this.props;\n    setUserEmailLogin(value);\n  }\n\n  handlePasswordChange({ target: { value } }) {\n    const { setUserPasswordLogin } = this.props;\n    setUserPasswordLogin(value);\n  }\n\n  handleEmailValidation(email) {\n    const regexEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return regexEmail.test(email);\n  }\n\n  handlePasswordValidation(password) {\n    const NUMBER_SIX = 6;\n    return password.length >= NUMBER_SIX;\n  }\n\n  render() {\n    const { userEmail, userPassword } = this.props;\n    const isEmailValid = this.handleEmailValidation(userEmail);\n    const isPasswordValid = this.handlePasswordValidation(userPassword);\n    return (\n      <section>\n        {console.log(userEmail)}\n        <form>\n          <label htmlFor=\"email\">\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              data-testid=\"email-input\"\n              onChange={ this.handleEmailChange }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Senha\n            <input\n              type=\"password\"\n              name=\"password\"\n              data-testid=\"password-input\"\n            />\n          </label>\n          <button type=\"button\" disabled={ !isEmailValid }>Entrar</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setUserEmailLogin: PropTypes.func.isRequired,\n  setUserPasswordLogin: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userPassword: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.userReducer.user.email,\n  userPassword: state.userReducer.user.password,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUserEmailLogin: (email) => dispatch(setUserEmail(email)),\n  setUserPasswordLogin: (password) => dispatch(setUserPassword(password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}