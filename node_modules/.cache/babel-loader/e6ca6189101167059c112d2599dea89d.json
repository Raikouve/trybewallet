{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, sendExpensesInfo } from '../actions';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { payMethods, tags } from '../helpers';\nimport getCurrencyInfo from '../services/currencyAPI';\nimport Header from '../components/Header';\n\nclass Wallet extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.state = {\n      totalExpenses: 0,\n      expenses: {\n        value: '',\n        description: '',\n        currency: '',\n        method: '',\n        tag: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchCurrenciesToProps\n    } = this.props;\n    fetchCurrenciesToProps();\n  }\n\n  handleInputChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleButtonClick() {\n    const {\n      expenses,\n      sendExpensesToProps\n    } = this.props;\n    const response = await getCurrencyInfo();\n    sendExpensesToProps({\n      id: expenses.length,\n      ...this.state.expenses,\n      exchangeRates: response\n    });\n  }\n\n  render() {\n    const {\n      props: {\n        userEmail,\n        walletCurrencies,\n        expenses\n      },\n      state: {\n        value,\n        description,\n        currency,\n        method,\n        tag\n      },\n      handleInputChange,\n      handleButtonClick\n    } = this;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      userEmail: userEmail,\n      expenses: expenses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"value\",\n      value: value,\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      value: description,\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"currency\",\n      value: currency,\n      options: walletCurrencies.filter(optCurrency => optCurrency !== 'USDT'),\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"method\",\n      value: method,\n      options: payMethods,\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"tag\",\n      value: tag,\n      options: tags,\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"adicionar despesa\",\n      type: \"button\",\n      onClick: handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nWallet.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fetchCurrenciesToProps: PropTypes.func.isRequired,\n  sendExpensesToProps: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCurrenciesToProps: () => dispatch(fetchCurrencies()),\n  sendExpensesToProps: expenses => dispatch(sendExpensesInfo(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.jsx"],"names":["React","Component","PropTypes","connect","fetchCurrencies","sendExpensesInfo","Input","Select","payMethods","tags","getCurrencyInfo","Header","Wallet","constructor","handleInputChange","bind","handleButtonClick","state","totalExpenses","expenses","value","description","currency","method","tag","componentDidMount","fetchCurrenciesToProps","props","target","name","setState","sendExpensesToProps","response","id","length","exchangeRates","render","userEmail","walletCurrencies","filter","optCurrency","propTypes","arrayOf","shape","isRequired","func","string","mapStateToProps","user","email","wallet","currencies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, sendExpensesInfo } from '../actions';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { payMethods, tags } from '../helpers';\nimport getCurrencyInfo from '../services/currencyAPI';\nimport Header from '../components/Header';\n\nclass Wallet extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n\n    this.state = {\n      totalExpenses: 0,\n      expenses: {\n        value: '',\n        description: '',\n        currency: '',\n        method: '',\n        tag: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchCurrenciesToProps } = this.props;\n    fetchCurrenciesToProps();\n  }\n\n  handleInputChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleButtonClick() {\n    const { expenses, sendExpensesToProps } = this.props;\n    const response = await getCurrencyInfo();\n    sendExpensesToProps({ id: expenses.length, ...this.state.expenses, exchangeRates: response });\n  }\n\n  render() {\n    const { props: { userEmail, walletCurrencies, expenses }, state: {\n      value, description, currency, method, tag },\n    handleInputChange, handleButtonClick } = this;\n    return (\n      <section>\n        <Header userEmail={ userEmail } expenses={ expenses } />\n        <form>\n          <Input\n            type=\"text\"\n            name=\"value\"\n            value={ value }\n            onChange={ handleInputChange }\n          />\n          <Input\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ handleInputChange }\n          />\n          <Select\n            name=\"currency\"\n            value={ currency }\n            options={ walletCurrencies.filter((optCurrency) => optCurrency !== 'USDT') }\n            onChange={ handleInputChange }\n          />\n          <Select\n            name=\"method\"\n            value={ method }\n            options={ payMethods }\n            onChange={ handleInputChange }\n          />\n          <Select\n            name=\"tag\"\n            value={ tag }\n            options={ tags }\n            onChange={ handleInputChange }\n          />\n          <button name=\"adicionar despesa\" type=\"button\" onClick={ handleButtonClick }>\n            Adicionar despesa\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nWallet.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fetchCurrenciesToProps: PropTypes.func.isRequired,\n  sendExpensesToProps: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrenciesToProps: () => dispatch(fetchCurrencies()),\n  sendExpensesToProps: (expenses) => dispatch(sendExpensesInfo(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}