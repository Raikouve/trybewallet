{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setUserEmail, setUserPassword } from '../actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailValidation = this.handleEmailValidation.bind(this);\n    this.handlePasswordValidation = this.handlePasswordValidation.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleEmailValidation(email) {\n    const regexEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return regexEmail.test(email);\n  }\n\n  handlePasswordValidation(password) {\n    const NUMBER_SIX = 6;\n    return password.length >= NUMBER_SIX;\n  }\n\n  handleClick() {\n    const {\n      history\n    } = this.props;\n    history.push('/carteira');\n  }\n\n  render() {\n    const {\n      userEmail,\n      userPassword\n    } = this.props;\n    const isEmailValid = this.handleEmailValidation(userEmail);\n    const isPasswordValid = this.handlePasswordValidation(userPassword);\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, console.log(!(isEmailValid && isPasswordValid)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      \"data-testid\": \"email-input\",\n      onChange: this.handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Senha\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      \"data-testid\": \"password-input\",\n      onChange: this.handlePasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: !(isEmailValid && isPasswordValid),\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  setUserEmailLogin: PropTypes.func.isRequired,\n  setUserPasswordLogin: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userPassword: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.userReducer.user.email,\n  userPassword: state.userReducer.user.password\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUserEmailLogin: email => dispatch(setUserEmail(email)),\n  setUserPasswordLogin: password => dispatch(setUserPassword(password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","setUserEmail","setUserPassword","Login","constructor","handleEmailChange","bind","handlePasswordChange","handleEmailValidation","handlePasswordValidation","handleClick","state","email","password","regexEmail","test","NUMBER_SIX","length","history","props","push","render","userEmail","userPassword","isEmailValid","isPasswordValid","console","log","propTypes","shape","func","isRequired","setUserEmailLogin","setUserPasswordLogin","string","mapStateToProps","userReducer","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,YAA9C;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKG,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BH,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKK,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAIDL,EAAAA,qBAAqB,CAACI,KAAD,EAAQ;AAC3B,UAAME,UAAU,GAAG,iCAAnB;AACA,WAAOA,UAAU,CAACC,IAAX,CAAgBH,KAAhB,CAAP;AACD;;AAEDH,EAAAA,wBAAwB,CAACI,QAAD,EAAW;AACjC,UAAMG,UAAU,GAAG,CAAnB;AACA,WAAQH,QAAQ,CAACI,MAAT,IAAmBD,UAA3B;AACD;;AAEDN,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEQ,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA8B,KAAKJ,KAAzC;AACA,UAAMK,YAAY,GAAG,KAAKhB,qBAAL,CAA2Bc,SAA3B,CAArB;AACA,UAAMG,eAAe,GAAG,KAAKhB,wBAAL,CAA8Bc,YAA9B,CAAxB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,OAAO,CAACC,GAAR,CAAY,EAAEH,YAAY,IAAIC,eAAlB,CAAZ,CADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,qBAAY,aAHd;AAIE,MAAA,QAAQ,EAAG,KAAKpB,iBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAUE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,qBAAY,gBAHd;AAIE,MAAA,QAAQ,EAAG,KAAKE,oBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,eAmBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAG,EAAGiB,YAAY,IAAIC,eAAnB,CAFb;AAGE,MAAA,OAAO,EAAG,KAAKf,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CAFF,CADF;AAiCD;;AAtE2B;;AAyE9BP,KAAK,CAACyB,SAAN,GAAkB;AAChBV,EAAAA,OAAO,EAAEnB,SAAS,CAAC8B,KAAV,CAAgB;AACvBT,IAAAA,IAAI,EAAErB,SAAS,CAAC+B;AADO,GAAhB,EAENC,UAHa;AAIhBC,EAAAA,iBAAiB,EAAEjC,SAAS,CAAC+B,IAAV,CAAeC,UAJlB;AAKhBE,EAAAA,oBAAoB,EAAElC,SAAS,CAAC+B,IAAV,CAAeC,UALrB;AAMhBT,EAAAA,SAAS,EAAEvB,SAAS,CAACmC,MAAV,CAAiBH,UANZ;AAOhBR,EAAAA,YAAY,EAAExB,SAAS,CAACmC,MAAV,CAAiBH;AAPf,CAAlB;;AAUA,MAAMI,eAAe,GAAIxB,KAAD,KAAY;AAClCW,EAAAA,SAAS,EAAEX,KAAK,CAACyB,WAAN,CAAkBC,IAAlB,CAAuBzB,KADA;AAElCW,EAAAA,YAAY,EAAEZ,KAAK,CAACyB,WAAN,CAAkBC,IAAlB,CAAuBxB;AAFH,CAAZ,CAAxB;;AAKA,MAAMyB,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,iBAAiB,EAAGpB,KAAD,IAAW2B,QAAQ,CAACtC,YAAY,CAACW,KAAD,CAAb,CADE;AAExCqB,EAAAA,oBAAoB,EAAGpB,QAAD,IAAc0B,QAAQ,CAACrC,eAAe,CAACW,QAAD,CAAhB;AAFJ,CAAf,CAA3B;;AAKA,eAAeb,OAAO,CAACmC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnC,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setUserEmail, setUserPassword } from '../actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailValidation = this.handleEmailValidation.bind(this);\n    this.handlePasswordValidation = this.handlePasswordValidation.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handle\n\n  handleEmailValidation(email) {\n    const regexEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return regexEmail.test(email);\n  }\n\n  handlePasswordValidation(password) {\n    const NUMBER_SIX = 6;\n    return (password.length >= NUMBER_SIX);\n  }\n\n  handleClick() {\n    const { history } = this.props;\n    history.push('/carteira');\n  }\n\n  render() {\n    const { userEmail, userPassword } = this.props;\n    const isEmailValid = this.handleEmailValidation(userEmail);\n    const isPasswordValid = this.handlePasswordValidation(userPassword);\n    return (\n      <section>\n        { console.log(!(isEmailValid && isPasswordValid)) }\n        <form>\n          <label htmlFor=\"email\">\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              data-testid=\"email-input\"\n              onChange={ this.handleEmailChange }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Senha\n            <input\n              type=\"password\"\n              name=\"password\"\n              data-testid=\"password-input\"\n              onChange={ this.handlePasswordChange }\n            />\n          </label>\n          <button\n            type=\"button\"\n            disabled={ !((isEmailValid && isPasswordValid)) }\n            onClick={ this.handleClick }\n          >\n            Entrar\n\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  setUserEmailLogin: PropTypes.func.isRequired,\n  setUserPasswordLogin: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userPassword: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.userReducer.user.email,\n  userPassword: state.userReducer.user.password,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUserEmailLogin: (email) => dispatch(setUserEmail(email)),\n  setUserPasswordLogin: (password) => dispatch(setUserPassword(password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}