{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setUserEmail, setUserPassword } from '../actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleEmailValidation = this.handleEmailValidation.bind(this);\n    this.handlePasswordValidation = this.handlePasswordValidation.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleEmailValidation(email) {\n    const regexEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return regexEmail.test(email);\n  }\n\n  handlePasswordValidation(password) {\n    const NUMBER_SIX = 6;\n    return password.length >= NUMBER_SIX;\n  }\n\n  handleClick() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      setUserEmailLogin,\n      setUserPasswordLogin,\n      history\n    } = this.props;\n    setUserEmailLogin(email);\n    setUserPasswordLogin(password);\n    history.push('/carteira');\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      userEmail,\n      userPassword\n    } = this.props;\n    const isEmailValid = this.handleEmailValidation(email);\n    const isPasswordValid = this.handlePasswordValidation(password);\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, console.log(!(isEmailValid && isPasswordValid)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      value: email,\n      name: \"email\",\n      \"data-testid\": \"email-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Senha\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      value: password,\n      name: \"password\",\n      \"data-testid\": \"password-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: !(isEmailValid && isPasswordValid),\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  setUserEmailLogin: PropTypes.func.isRequired,\n  setUserPasswordLogin: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userPassword: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.userReducer.user.email,\n  userPassword: state.userReducer.user.password\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUserEmailLogin: email => dispatch(setUserEmail(email)),\n  setUserPasswordLogin: password => dispatch(setUserPassword(password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","setUserEmail","setUserPassword","Login","constructor","handleChange","bind","handleClick","handleEmailValidation","handlePasswordValidation","state","email","password","target","name","value","setState","regexEmail","test","NUMBER_SIX","length","setUserEmailLogin","setUserPasswordLogin","history","props","push","render","userEmail","userPassword","isEmailValid","isPasswordValid","console","log","propTypes","shape","func","isRequired","string","mapStateToProps","userReducer","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,YAA9C;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKG,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BH,IAA9B,CAAmC,IAAnC,CAAhC;AAEA,SAAKI,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDP,EAAAA,YAAY,CAAC;AAAEQ,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAD,EAA8B;AACxC,SAAKC,QAAL,CAAc;AACZ,OAACF,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDP,EAAAA,qBAAqB,CAACG,KAAD,EAAQ;AAC3B,UAAMM,UAAU,GAAG,iCAAnB;AACA,WAAOA,UAAU,CAACC,IAAX,CAAgBP,KAAhB,CAAP;AACD;;AAEDF,EAAAA,wBAAwB,CAACG,QAAD,EAAW;AACjC,UAAMO,UAAU,GAAG,CAAnB;AACA,WAAQP,QAAQ,CAACQ,MAAT,IAAmBD,UAA3B;AACD;;AAEDZ,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AACA,UAAM;AAAEW,MAAAA,iBAAF;AAAqBC,MAAAA,oBAArB;AAA2CC,MAAAA;AAA3C,QAAuD,KAAKC,KAAlE;AACAH,IAAAA,iBAAiB,CAACV,KAAD,CAAjB;AACAW,IAAAA,oBAAoB,CAACV,QAAD,CAApB;AACAW,IAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AACA,UAAM;AAAEiB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA8B,KAAKJ,KAAzC;AACA,UAAMK,YAAY,GAAG,KAAKrB,qBAAL,CAA2BG,KAA3B,CAArB;AACA,UAAMmB,eAAe,GAAG,KAAKrB,wBAAL,CAA8BG,QAA9B,CAAxB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACImB,OAAO,CAACC,GAAR,CAAY,EAAEH,YAAY,IAAIC,eAAlB,CAAZ,CADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAGnB,KAFV;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,qBAAY,aAJd;AAKE,MAAA,QAAQ,EAAG,KAAKN,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAWE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAGO,QAFV;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,qBAAY,gBAJd;AAKE,MAAA,QAAQ,EAAG,KAAKP,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,eAqBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAG,EAAGwB,YAAY,IAAIC,eAAnB,CAFb;AAGE,MAAA,OAAO,EAAG,KAAKvB,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,CAFF,CADF;AAmCD;;AA/E2B;;AAkF9BJ,KAAK,CAAC8B,SAAN,GAAkB;AAChBV,EAAAA,OAAO,EAAExB,SAAS,CAACmC,KAAV,CAAgB;AACvBT,IAAAA,IAAI,EAAE1B,SAAS,CAACoC;AADO,GAAhB,EAENC,UAHa;AAIhBf,EAAAA,iBAAiB,EAAEtB,SAAS,CAACoC,IAAV,CAAeC,UAJlB;AAKhBd,EAAAA,oBAAoB,EAAEvB,SAAS,CAACoC,IAAV,CAAeC,UALrB;AAMhBT,EAAAA,SAAS,EAAE5B,SAAS,CAACsC,MAAV,CAAiBD,UANZ;AAOhBR,EAAAA,YAAY,EAAE7B,SAAS,CAACsC,MAAV,CAAiBD;AAPf,CAAlB;;AAUA,MAAME,eAAe,GAAI5B,KAAD,KAAY;AAClCiB,EAAAA,SAAS,EAAEjB,KAAK,CAAC6B,WAAN,CAAkBC,IAAlB,CAAuB7B,KADA;AAElCiB,EAAAA,YAAY,EAAElB,KAAK,CAAC6B,WAAN,CAAkBC,IAAlB,CAAuB5B;AAFH,CAAZ,CAAxB;;AAKA,MAAM6B,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGV,KAAD,IAAW+B,QAAQ,CAACzC,YAAY,CAACU,KAAD,CAAb,CADE;AAExCW,EAAAA,oBAAoB,EAAGV,QAAD,IAAc8B,QAAQ,CAACxC,eAAe,CAACU,QAAD,CAAhB;AAFJ,CAAf,CAA3B;;AAKA,eAAeZ,OAAO,CAACsC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtC,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setUserEmail, setUserPassword } from '../actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleEmailValidation = this.handleEmailValidation.bind(this);\n    this.handlePasswordValidation = this.handlePasswordValidation.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleEmailValidation(email) {\n    const regexEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return regexEmail.test(email);\n  }\n\n  handlePasswordValidation(password) {\n    const NUMBER_SIX = 6;\n    return (password.length >= NUMBER_SIX);\n  }\n\n  handleClick() {\n    const { email, password } = this.state;\n    const { setUserEmailLogin, setUserPasswordLogin, history } = this.props;\n    setUserEmailLogin(email);\n    setUserPasswordLogin(password);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const { userEmail, userPassword } = this.props;\n    const isEmailValid = this.handleEmailValidation(email);\n    const isPasswordValid = this.handlePasswordValidation(password);\n    return (\n      <section>\n        { console.log(!(isEmailValid && isPasswordValid)) }\n        <form>\n          <label htmlFor=\"email\">\n            Email\n            <input\n              type=\"email\"\n              value={ email }\n              name=\"email\"\n              data-testid=\"email-input\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Senha\n            <input\n              type=\"password\"\n              value={ password }\n              name=\"password\"\n              data-testid=\"password-input\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <button\n            type=\"button\"\n            disabled={ !((isEmailValid && isPasswordValid)) }\n            onClick={ this.handleClick }\n          >\n            Entrar\n\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  setUserEmailLogin: PropTypes.func.isRequired,\n  setUserPasswordLogin: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userPassword: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.userReducer.user.email,\n  userPassword: state.userReducer.user.password,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUserEmailLogin: (email) => dispatch(setUserEmail(email)),\n  setUserPasswordLogin: (password) => dispatch(setUserPassword(password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}