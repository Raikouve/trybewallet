{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/components/Select.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class Select extends Component {\n  render() {\n    const {\n      name,\n      labelText,\n      options,\n      onChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: name,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, labelText, /*#__PURE__*/React.createElement(\"select\", {\n      id: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, options.map((oneOption, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: oneOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, oneOption))));\n  }\n\n}\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  name: PropTypes.string.isRequired,\n  labelText: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/components/Select.jsx"],"names":["React","Component","PropTypes","Select","render","name","labelText","options","onChange","props","map","oneOption","index","propTypes","arrayOf","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC5CG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,QAAyC,KAAKC,KAApD;AACA,wBACE;AAAO,MAAA,OAAO,EAAGJ,IAAjB;AAAwB,MAAA,QAAQ,EAAGG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIF,SADJ,eAEE;AAAS,MAAA,EAAE,EAAGD,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIE,OAAO,CAACG,GAAR,CAAY,CAACC,SAAD,EAAYC,KAAZ,kBACZ;AACE,MAAA,GAAG,EAAGA,KADR;AAEE,MAAA,KAAK,EAAGD,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIA,SAJJ,CADA,CADJ,CAFF,CADF;AAcD;;AAjB2C;AAoB9CR,MAAM,CAACU,SAAP,GAAmB;AACjBN,EAAAA,OAAO,EAAEL,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,MAA5B,EAAoCC,UAD5B;AAEjBX,EAAAA,IAAI,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UAFN;AAGjBV,EAAAA,SAAS,EAAEJ,SAAS,CAACa,MAAV,CAAiBC,UAHX;AAIjBR,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAAV,CAAeD;AAJR,CAAnB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Select extends Component {\n  render() {\n    const { name, labelText, options, onChange } = this.props;\n    return (\n      <label htmlFor={ name } onChange={ onChange }>\n        { labelText }\n        <select  id={ name }>\n          { options.map((oneOption, index) => (\n            <option\n              key={ index }\n              value={ oneOption }\n            >\n              { oneOption }\n            </option>)) }\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  name: PropTypes.string.isRequired,\n  labelText: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}