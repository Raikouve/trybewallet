{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../actions';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\n\nclass Wallet extends Component {\n  constructor() {\n    super();\n    this.state = {\n      expenses: 0,\n      actualCurrency: 'BRL'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchCurrenciesToProps\n    } = this.props;\n    fetchCurrenciesToProps();\n  }\n\n  handleInputChange() {}\n\n  render() {\n    const {\n      userEmail,\n      walletCurrencies\n    } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const {\n      expenses,\n      actualCurrency\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, userEmail), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, expenses), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, actualCurrency)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"valor\",\n      labelText: \"Valor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      labelText: \"Descri\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      labelText: \"Moeda\",\n      options: walletCurrencies.filter(currency => currency !== 'USDT'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      labelText: \"M\\xE9todo de pagamento\",\n      options: payMethods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      labelText: \"Tag\",\n      options: tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nWallet.propTypes = {\n  fetchCurrenciesToProps: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCurrenciesToProps: () => dispatch(fetchCurrencies())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","Component","PropTypes","connect","fetchCurrencies","Input","Select","Wallet","constructor","state","expenses","actualCurrency","componentDidMount","fetchCurrenciesToProps","props","handleInputChange","render","userEmail","walletCurrencies","payMethods","tags","filter","currency","propTypes","func","isRequired","string","arrayOf","mapStateToProps","user","email","wallet","currencies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../actions';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\n\nclass Wallet extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      expenses: 0,\n      actualCurrency: 'BRL',\n    };\n  }\n\n  componentDidMount() {\n    const { fetchCurrenciesToProps } = this.props;\n    fetchCurrenciesToProps();\n  }\n\n  handleInputChange() {\n    \n  }\n\n  render() {\n    const { userEmail, walletCurrencies } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const { expenses, actualCurrency } = this.state;\n    return (\n      <section>\n        <header>\n          <span data-testid=\"email-field\">{ userEmail }</span>\n          <span data-testid=\"total-field\">{ expenses }</span>\n          <span data-testid=\"header-currency-field\">{ actualCurrency }</span>\n        </header>\n        <form>\n          <Input\n            type=\"text\"\n            name=\"valor\"\n            labelText=\"Valor\"\n          />\n          <Input\n            type=\"text\"\n            name=\"description\"\n            labelText=\"Descrição\"\n          />\n          <Select\n            labelText=\"Moeda\"\n            options={ walletCurrencies.filter((currency) => currency !== 'USDT') }\n          />\n          <Select\n            labelText=\"Método de pagamento\"\n            options={ payMethods }\n          />\n          <Select\n            labelText=\"Tag\"\n            options={ tags }\n          />\n          <button type=\"button\">Adicionar despesa</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nWallet.propTypes = {\n  fetchCurrenciesToProps: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrenciesToProps: () => dispatch(fetchCurrencies()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}