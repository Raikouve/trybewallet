{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { getCurrencies } from '../actions';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpenses: 0,\n      actualCurrency: 'BRL'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getCurrencies\n    } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const {\n      walletCurrencies\n    } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const {\n      totalExpenses,\n      actualCurrency\n    } = this.state;\n    const {\n      userEmail\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, userEmail), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, totalExpenses), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, actualCurrency)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Valor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Descri\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"Moeda\",\n      options: walletCurrencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"M\\xE9todo de pagamento\",\n      options: payMethods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"Tag\",\n      options: tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nWallet.propTypes = {\n  getCurrencies: PropTypes.func,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrencies: () => dispatch(getCurrencies())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","PropTypes","Input","Select","getCurrencies","Wallet","Component","constructor","state","totalExpenses","actualCurrency","componentDidMount","props","render","walletCurrencies","payMethods","tags","userEmail","propTypes","func","string","isRequired","mapStateToProps","user","email","wallet","currencies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { getCurrencies } from '../actions';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpenses: 0,\n      actualCurrency: 'BRL',\n    };\n  }\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const { walletCurrencies } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const { totalExpenses, actualCurrency } = this.state;\n    const { userEmail } = this.props;\n    return (\n      <section>\n        <header>\n          <span data-testid=\"email-field\">{ userEmail }</span>\n          <span data-testid=\"total-field\">{ totalExpenses }</span>\n          <span data-testid=\"header-currency-field\">{ actualCurrency }</span>\n        </header>\n        <form>\n          <Input\n            type=\"text\"\n            name=\"Valor\"\n          />\n          <Input\n            type=\"text\"\n            name=\"Descrição\"\n          />\n          <Select\n            name=\"Moeda\"\n            options={ walletCurrencies }\n          />\n          <Select\n            name=\"Método de pagamento\"\n            options={ payMethods }\n          />\n          <Select\n            name=\"Tag\"\n            options={ tags }\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nWallet.propTypes = {\n  getCurrencies: PropTypes.func,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(getCurrencies()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}