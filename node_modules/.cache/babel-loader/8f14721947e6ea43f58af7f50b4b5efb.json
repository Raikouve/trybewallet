{"ast":null,"code":"var _jsxFileName = \"/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { fetchCurrencies } from '../actions';\nimport getCurrencyInfo from '../services/currencyAPI';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.fetchCurrenciesToState = this.fetchCurrenciesToState.bind(this);\n    this.state = {\n      currencies: [],\n      totalExpenses: 0,\n      actualCurrency: 'BRL'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchCurrenciesToState\n    } = this.props;\n    const {\n      currencies\n    } = this.state;\n    this.fetchCurrenciesToState();\n    fetchCurrenciesToState(currencies);\n  }\n\n  async fetchCurrenciesToState() {\n    const currencyInfo = await getCurrencyInfo();\n    this.setState({\n      currencies: Object.keys(currencyInfo)\n    });\n  }\n\n  render() {\n    const {\n      userEmail\n      /* , walletCurrencies */\n\n    } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const {\n      currencies,\n      totalExpenses,\n      actualCurrency\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, userEmail), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, totalExpenses), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, actualCurrency)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Valor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Descri\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"Moeda\",\n      options: currencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"M\\xE9todo de pagamento\",\n      options: payMethods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"Tag\",\n      options: tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nWallet.propTypes = {\n  // fetchCurrencies: PropTypes.func.isRequired,\n  fetchCurrenciesToState: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCurrenciesToState: currencies => dispatch(fetchCurrencies(currencies))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/toni/sd-014-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","PropTypes","Input","Select","fetchCurrencies","getCurrencyInfo","Wallet","Component","constructor","fetchCurrenciesToState","bind","state","currencies","totalExpenses","actualCurrency","componentDidMount","props","currencyInfo","setState","Object","keys","render","userEmail","payMethods","tags","propTypes","func","isRequired","string","walletCurrencies","arrayOf","mapStateToProps","user","email","wallet","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,aAAa,EAAE,CAFJ;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAA6B,KAAKO,KAAxC;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,SAAKF,sBAAL;AACAA,IAAAA,sBAAsB,CAACG,UAAD,CAAtB;AACD;;AAED,QAAMH,sBAAN,GAA+B;AAC7B,UAAMQ,YAAY,GAAG,MAAMZ,eAAe,EAA1C;AACA,SAAKa,QAAL,CAAc;AACZN,MAAAA,UAAU,EAAEO,MAAM,CAACC,IAAP,CAAYH,YAAZ;AADA,KAAd;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAS;;AAAX,QAAwC,KAAKN,KAAnD;AACA,UAAMO,UAAU,GAAG,CAAC,UAAD,EAAa,mBAAb,EAAkC,kBAAlC,CAAnB;AACA,UAAMC,IAAI,GAAG,CAAC,aAAD,EAAgB,OAAhB,EAAyB,UAAzB,EAAqC,YAArC,EAAmD,OAAnD,CAAb;AACA,UAAM;AAAEZ,MAAAA,UAAF;AAAcC,MAAAA,aAAd;AAA6BC,MAAAA;AAA7B,QAAgD,KAAKH,KAA3D;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCW,SAAlC,CADF,eAEE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCT,aAAlC,CAFF,eAGE;AAAM,qBAAY,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CC,cAA5C,CAHF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,iBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eASE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAGF,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAaE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,wBADP;AAEE,MAAA,OAAO,EAAGW,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAiBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,OAAO,EAAGC,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CANF,CADF;AA+BD;;AA/DkC;;AAkErClB,MAAM,CAACmB,SAAP,GAAmB;AACjB;AACAhB,EAAAA,sBAAsB,EAAER,SAAS,CAACyB,IAAV,CAAeC,UAFtB;AAGjBL,EAAAA,SAAS,EAAErB,SAAS,CAAC2B,MAAV,CAAiBD,UAHX;AAIjBE,EAAAA,gBAAgB,EAAE5B,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC2B,MAA5B,EAAoCD;AAJrC,CAAnB;;AAOA,MAAMI,eAAe,GAAIpB,KAAD,KAAY;AAClCW,EAAAA,SAAS,EAAEX,KAAK,CAACqB,IAAN,CAAWC,KADY;AAElCJ,EAAAA,gBAAgB,EAAElB,KAAK,CAACuB,MAAN,CAAatB;AAFG,CAAZ,CAAxB;;AAKA,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;AACxC3B,EAAAA,sBAAsB,EAAGG,UAAD,IAAgBwB,QAAQ,CAAChC,eAAe,CAACQ,UAAD,CAAhB;AADR,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAAC+B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C7B,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport { fetchCurrencies } from '../actions';\nimport getCurrencyInfo from '../services/currencyAPI';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchCurrenciesToState = this.fetchCurrenciesToState.bind(this);\n\n    this.state = {\n      currencies: [],\n      totalExpenses: 0,\n      actualCurrency: 'BRL',\n    };\n  }\n\n  componentDidMount() {\n    const { fetchCurrenciesToState } = this.props;\n    const { currencies } = this.state;\n    this.fetchCurrenciesToState();\n    fetchCurrenciesToState(currencies);\n  }\n\n  async fetchCurrenciesToState() {\n    const currencyInfo = await getCurrencyInfo();\n    this.setState({\n      currencies: Object.keys(currencyInfo),\n    });\n  }\n\n  render() {\n    const { userEmail/* , walletCurrencies */ } = this.props;\n    const payMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const { currencies, totalExpenses, actualCurrency } = this.state;\n    return (\n      <section>\n        <header>\n          <span data-testid=\"email-field\">{ userEmail }</span>\n          <span data-testid=\"total-field\">{ totalExpenses }</span>\n          <span data-testid=\"header-currency-field\">{ actualCurrency }</span>\n        </header>\n        <form>\n          <Input\n            type=\"text\"\n            name=\"Valor\"\n          />\n          <Input\n            type=\"text\"\n            name=\"Descrição\"\n          />\n          <Select\n            name=\"Moeda\"\n            options={ currencies }\n          />\n          <Select\n            name=\"Método de pagamento\"\n            options={ payMethods }\n          />\n          <Select\n            name=\"Tag\"\n            options={ tags }\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nWallet.propTypes = {\n  // fetchCurrencies: PropTypes.func.isRequired,\n  fetchCurrenciesToState: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  walletCurrencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  walletCurrencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrenciesToState: (currencies) => dispatch(fetchCurrencies(currencies)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}